name 'Hostname'
rs_ca_ver 20161221
short_description "Hostname test catelog"
long_description "Hostname test catelog"

import "sys_log"

####################
# OPERATIONS       #
####################

operation "enable" do
    description "Get information once the app has been launched"
    definition "enable"
end

# Description
define enable() do
    $cred_name = "ABI_Server_Max_Value"
    @creds = rs_cm.credentials.index(view: 'sensitive', filter: [join(["name==", $cred_name])])
    #@creds = rs_cm.credentials.show(view: 'sensitive', filter: ["href==/api/credentials/270371004"])
    #@creds = rs_cm.credentials.get(filter: "name==ABI_Server_Max_Value", view: "sensitive")
    call sys_log.detail("Creds :" + to_s(@creds)+"\n")
    call sys_log.detail("Creds Name :" + to_s(@creds.name))
    call sys_log.detail("Creds created :" + to_s(@creds.created_at))
    call sys_log.detail("Creds Value :" + to_s(@creds.value))

    $cred_object = to_object(@creds)
    $value = first($cred_object["details"])["value"]
    call sys_log.detail("Creds Value(string) :" + to_s($value))
    call sys_log.detail("Creds Value(Num) :" + to_n($value))

    $value = to_n($value)
    $inc_value = $value+1
    call sys_log.detail("Creds Value(Num) :" + to_n($inc_value))

    if size(@cred) == 0
        raise "Unable to find credential with name: " + $name
    end
end

define update_cred($cred_name, $new_cred_value) do
    @cred = rs_cm.credentials.get(filter: [join(["name==",$cred_name])])
    # May return partially matched named creds, so find the exact one we want
    foreach @credential in @cred do
      if @credential.name == $cred_name
        @cred = @credential
      end
    end
    @cred.update(credential: { value: $new_cred_value, description: "Updated by bindesh on "+to_s(now()) })
end
